{
  "openapi": "3.0.1",
  "info": {
    "version": "2.0.1",
    "title": "Pets back-end documentation",
    "description": "API documentation for pets project",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "consumes": ["application/json"],
  "produces": ["application/json"],
  "servers": [{ "url": "https://pets-project.onrender.com/api" }],
  "tags": [
    {
      "name": "Auth",
      "description": "Authorization endpoints"
    },
    {
      "name": "Services",
      "description": "Services-sidebar endpoints"
    }
  ],
  "paths": {
    "/auth/register": {
      "post": {
        "tags": ["Auth"],
        "summary": "User registration",
        "parameters": [],
        "requestBody": {
          "description": "Registration's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "User not created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": ["Auth"],
        "summary": "User login",
        "parameters": [],
        "requestBody": {
          "description": "Login object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "A token for the user is returned",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "Error login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "tags": ["Auth"],
        "summary": "User logout",
        "parameters": [{
          "in": "string",
          "name": "Authorization",
          "required" :true,
          "type": "string",
          "description": "The token issued to the current user."
        }],
        "security": [{ "Bearer": [] }],
        "responses": {
          "204": {
            "description": "Remove user's token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/logoutResponse"
                }
              }
            }
          },
          "401": {
            "description": "Missing header with authorization token.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/auth/update": {
      "patch": {
        "tags": ["Auth"],
        "summary": "User update",
        "parameters": [{
          "in": "string",
          "name": "Authorization",
          "required" :true,
          "type": "string",
          "description": "The token issued to the current user."
        }],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Update object",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns updated user data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request. Invalid id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "User not authorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "Changing the user's mail to an already existing one",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "RegistrationRequest": {
        "type": "object",
        "required": [
          "email",
          "password",
          "name",
          "city",
          "phone"
        ],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123"
          },
          "name": {
            "type": "string",
            "description": "User's name",
            "example": "Boby"
          },
          "city": {
            "type": "string",
            "description": "User's city",
            "example": "Gorodok, Lviv"
          },
          "phone": {
            "type": "string",
            "description": "User's phone",
            "example": "+380671111111"
          }
        }
      },
      "RegistrationResponse": {
          "type": "object",
          "properties": {
            "email": {
              "type": "string",
              "description": "User's email",
              "format": "email"
            },
            "password": {
              "type": "string",
              "description": "User's password"
            },
            "name": {
            "type": "string",
            "description": "User's name"
          },
          "city": {
            "type": "string",
            "description": "User's city"
          },
          "phone": {
            "type": "string",
            "description": "User's phone",
            "example": "+380671111111"
          }
          },
        "example": [
          { 
            "email": "1@gmail.com", 
            "password": "123456", 
            "name":"Boby",
            "city": "Borispol, Kiev",
            "phone": "+380671111111"
          }
        ]
      },
      "LoginRequest": {
        "type": "object",
        "required": [
          "email",
          "password"
        ],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123"
          }
        }
      },
      "LoginResponse": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "format": "JWT",
            "description": "User's token",
            "example": "iyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYzY2Q5OGQ0ZWM1NzQ3ZjVjNDg0YjVlMSIsImlhdCI6MTY3NDQxODcyOCwiZXhwIjoxNjc0NDIyMzI4fQ.qmrt-kGVp-uJrhmBUt7NKLfBIhjGO7KvJC9KmX6Ujc8"
          },
          "id": {
            "type": "string",
            "description": "User's id",
            "example": "_id: objectid ('63e380c194de20f1761df4ae')"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          }
        }
      },
      "logoutResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Success"
          }
        }
      },
      "UpdateRequest": {
        "type": "object",
        "properties": {
          "avatarURL": {
            "type": "string",
            "format": "binary",
            "description": "user's photo"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "birthday": {
            "type": "string",
            "description": "User's birthday",
            "example": "09-17-2002"
          },
          "name": {
            "type": "string",
            "description": "User's name",
            "example": "Boby"
          },
          "city": {
            "type": "string",
            "description": "User's city",
            "example": "Gorodok, Lviv"
          },
          "phone": {
            "type": "string",
            "description": "User's phone",
            "example": "+380671111111"
          }
        }
      },
      "UpdateResponse": {
        "type": "object",
        "properties": {
          "avatarURL": {
            "type": "string",
            "format": "binary",
            "description": "user's photo"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "birthday": {
            "type": "string",
            "description": "User's birthday",
            "example": "09-17-2002"
          },
          "name": {
            "type": "string",
            "description": "User's name",
            "example": "Boby Swagger"
          },
          "city": {
            "type": "string",
            "description": "User's city",
            "example": "Makeevka, Donetsk"
          },
          "phone": {
            "type": "string",
            "description": "User's phone",
            "example": "+380671111111"
          }
        }
      },
      "Error": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Any validation error"
          }
        },
        "required": [
          "message"
        ]
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
