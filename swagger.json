{
  "openapi": "3.0.1",
  "info": {
    "version": "2.0.7",
    "title": "Pets back-end documentation",
    "description": "API documentation for pets project",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "consumes": ["application/json", "multipart/form-data"],
  "produces": ["application/json"],
  "servers": [{ "url": "https://pets-project.onrender.com/api" }],
  "tags": [
    {
      "name": "Auth",
      "description": "Authorization endpoints"
    },
    {
      "name": "Services",
      "description": "Services-sidebar endpoints"
    },
    {
      "name": "News",
      "description": "News endpoints"
    },
    {
      "name": "Notices",
      "description": "Notices endpoints"
    },
    {
      "name": "Pets",
      "description": "Petly endpoints"
    },
    {
      "name": "User_Pets",
      "description": "User-Pets endpoints"
    }
  ],
  "paths": {
    "/auth/register": {
      "post": {
        "tags": ["Auth"],
        "summary": "User registration",
        "parameters": [],
        "requestBody": {
          "description": "Registration's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "User not created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": ["Auth"],
        "summary": "User login",
        "parameters": [],
        "requestBody": {
          "description": "Login object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "A token for the user is returned",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "Error login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "tags": ["Auth"],
        "summary": "User logout",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "responses": {
          "204": {
            "description": "Remove user's token",
            "content": {}
          },
          "401": {
            "description": "Missing header with authorization token.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/auth/update": {
      "patch": {
        "tags": ["Auth"],
        "summary": "User update",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Update object",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns updated user data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request. Invalid id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "User not authorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "Changing the user's mail to an already existing one",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/auth/refresh": {
      "post": {
        "tags": ["Auth"],
        "summary": "Refresh token",
        "parameters": [{
          "in": "string",
          "name": "Authorization",
          "required" :true,
          "type": "string",
          "description": "The token issued to the current user."
        }],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Token object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RefreshTokenRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns updated user data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RefreshTokenResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request. Invalid id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "User not authorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/services": {
      "get": {
        "tags": ["Services"],
        "summary": "Services-Sidebar",
        "parameters": [],
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/news": {
      "get": {
        "tags": ["News"],
        "summary": "Pets news",
        "parameters": [],
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NewsResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
     "/notices/{category}": {
      "get": {
        "tags": ["Notices"],
        "summary": "Returns notices of the selected category",
        "parameters": [
          {
            "in": "path",
            "name": "categoryName",
            "schema": {
              "type": "string",
              "enum": ["sell", "lostfound", "ingoodhands"]
            },
            "required": true,
            "description": "One category with ['sell','ingoodhands','lostfound']"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string",
            "description": "Skip page, default = 1"
          },
          {
            "in": "query",
            "name": "limit",
            "type": "string",
            "description": "Limit per page, default = 8"
          }
        ],
        "responses": {
          "200": {
            "description": "Array of all notices selected category",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NoticesCategory"
                }
              }
            }
          },
          "400": {
            "description": "Bad request. Invalid id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/notices/id/{id}": {
      "get": {
        "tags": ["Notices"],
        "summary": "Return notice by id",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "description": "Notice's id",
              "example": "63d9c87277ab211223ccd24d"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Notice by id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseNoticeById"
                }
              }
            }
          },
          "400": {
            "description": "Bad request. Invalid id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/notices/favorite/{id}": {
      "patch": {
        "tags": ["Notices"],
        "summary": "Adding notice to an authorized user's favorites list",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "description": "Notice's id",
              "example": "63d9c87277ab211223ccd24d"
            },
            "required": true
          }
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "201": {
            "description": null,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "The notice has been added to favorites"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request. The notice is in the user's favorites list",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "The notice is in the user's favorites list"
                }
              }
            }
          },
          "401": {
            "description": "User not authorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                 "message": "Not"
                }
              }
            }
          },
          "404": {
            "description": "Not find notice with this id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Not found"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Notices"],
        "summary": "Deleting a notice from the favorite list authorized user",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "description": "Notice's id",
              "example": "63d9c87277ab211223ccd24d"
            },
            "required": true
          }
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "The notice has been removed from favorites list the authorized user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "The notice deleted with favorites list"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request. the notice is not in the favorite list authorize user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "the notice is not in the favorite list authorize user"
                }
              }
            }
          },
          "401": {
            "description": "User not authorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Not"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            },
            "example": {
              "message": "Not found"
            }
          }
        }
          }
        }
      }
    },
    "/notices/notice": {
      "post": {
        "tags": ["Notices"],
        "summary": "Creates a new notice",
        "parameters": [],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "description": null,
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/NoticeBodyToCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Повертає новостворене оголошення",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NewNoticeBody"
                },
                "examples": {
                  "Category 'Sell'": {
                    "$ref": "#/components/examples/NoticeCreatedSellCategory"
                  },
                  "Category 'lostfound'": {
                    "$ref": "#/components/examples/NoticeCreatedLostfoundCategory"
                  },
                  "Category 'ingoodhands'": {
                    "$ref": "#/components/examples/NoticeCreatedIngoodhandsCategory"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400-BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/401-NotAutorized"
          }
        }
      }
    },
    "/notices/notice/favorite":{
      "get": {
        "tags": ["Notices"],
        "summary": "Returns a list of the user's favorite notices",
        "parameters": [],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "List of the user's favorite notices",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NoticesFavoritesUser"
                }
              }
            }
          },
          "401": {
            "description": "User not authorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/notices/user/ads": {
      "get": {
        "tags": [
          "Notices"
        ],
        "summary": "Returns all messages created by an authorized user",
        "parameters": [],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Array of all notices created by an authorized user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NoticesCurrentUser"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
               "schema": {
                "$ref": "#/components/schemas/Error"
            },
            "example": {
              "message": "Not found"
            }
          }
        }
          }
        }
      }
    },
    "/notices/user/{id}": {
      "delete": {
        "tags": [
          "Notices"
        ],
        "summary": "Deleting notice of an authorized user was added by him",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "description": "Notice's id",
              "example": "63d9c87277ab211223ccd24d"
            },
            "required": true
          }
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Notice deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Notice deleted"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request. Invalid id",
             "content": {
               "application/json": {
                 "schema": {
                   "$ref": "#/components/schemas/Error"
                 },
                 "example": {
                   "message": "Invalid id"
                 }
               }
             }
          },
          "401": {
            "description": "User not authorized",
             "content": {
               "application/json": {
                 "schema": {
                   "$ref": "#/components/schemas/Error"
                },
                 "example": {
                   "message": "Not"
                 }
               }
             }
          },
          "404": {
            "description": "Not found",
             "content": {
               "application/json": {
                 "schema": {
                   "$ref": "#/components/schemas/Error"
                 },
                 "example": {
                   "message": "Not found"
                 }
               }
             }
          }
        }
      }
    },
    "/users/pet/add": {
      "post": {
        "tags": ["Pets"],
        "summary": "Add pets",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [],
        "requestBody": {
          "description": "Object of user pet",
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/addPet"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NewPet"
                }
              }
            }
          },
          "400": {
            "description": "Bad request. Invalid id",
             "content": {
               "application/json": {
                 "schema": {
                   "$ref": "#/components/schemas/Error"
                 },
                 "example": {
                   "message": "Invalid id"
                 }
               }
             }
          },
          "401": {
            "description": "User not authorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "example": "message: Server error"
              }
            }
          }
        }
      }
    },
    "/users/pet/{id}": {
      "delete": {
        "tags": ["Pets"],
        "summary": "Delete pets",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Pet's id"
          }
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "example": "Notice not found"
              }
            }
          },
          "401": {
            "description": "User not authorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "example": "message: Server error"
              }
            }
          }
        }
      }
    },
    "/users/user/current":{
      "get":{
        "tags":[
          "User_Pets"
        ],
        "summary": "Get current user",
        
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CurrentUserRes"
                }
              }
            }
          },
          "401": {
            "description": "User not authorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "example": "message: Server error"
              }
            }
          }
        }
    }
    },
    "/users/pet/current":{
      "get":{
        "tags":[
          "User_Pets"
        ],
        "summary": "Get current user pets",
        
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CurrentUserPetRes"
                }
              }
            }
          },
          "401": {
            "description": "User not authorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "example": "message: Server error"
              }
            }
          }
        }
    }
    }
  },
  "components": {
    "schemas": {
      "RegistrationRequest": {
        "type": "object",
        "required": [
          "email",
          "password",
          "name",
          "city",
          "phone"
        ],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123"
          },
          "name": {
            "type": "string",
            "description": "User's name",
            "example": "Boby"
          },
          "city": {
            "type": "string",
            "description": "User's city",
            "example": "Gorodok, Lviv"
          },
          "phone": {
            "type": "string",
            "description": "User's phone",
            "example": "+380671111111"
          }
        }
      },
      "RegistrationResponse": {
          "type": "object",
          "properties": {
            "email": {
              "type": "string",
              "description": "User's email",
              "format": "email"
            },
            "password": {
              "type": "string",
              "description": "User's password"
            },
            "name": {
            "type": "string",
            "description": "User's name"
          },
          "city": {
            "type": "string",
            "description": "User's city"
          },
          "phone": {
            "type": "string",
            "description": "User's phone",
            "example": "+380671111111"
          }
          },
        "example": [
          { 
            "email": "1@gmail.com", 
            "password": "123456", 
            "name":"Boby",
            "city": "Borispol, Kiev",
            "phone": "+380671111111"
          }
        ]
      },
      "LoginRequest": {
        "type": "object",
        "required": [
          "email",
          "password"
        ],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123"
          }
        }
      },
      "LoginResponse": {
        "type": "object",
        "properties": {
          "accessToken": {
            "type": "string",
            "format": "JWT",
            "description": "User's token",
            "example": "iyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYzY2Q5OGQ0ZWM1NzQ3ZjVjNDg0YjVlMSIsImlhdCI6MTY3NDQxODcyOCwiZXhwIjoxNjc0NDIyMzI4fQ.qmrt-kGVp-uJrhmBUt7NKLfBIhjGO7KvJC9KmX6Ujc8"
          },
          "id": {
            "type": "string",
            "description": "User's id",
            "example": "_id : 63e380c194de20f1761df4ae"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          }
        }
      },
      "UpdateRequest": {
        "type": "object",
        "properties": {
          "avatarURL": {
            "type": "string",
            "format": "binary",
            "description": "user's photo"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "birthday": {
            "type": "string",
            "description": "User's birthday",
            "example": "09.07.2002"
          },
          "name": {
            "type": "string",
            "description": "User's name",
            "example": "Boby"
          },
          "city": {
            "type": "string",
            "description": "User's city",
            "example": "Gorodok, Lviv"
          },
          "phone": {
            "type": "string",
            "description": "User's phone",
            "example": "+380671111111"
          }
        }
      },
      "UpdateResponse": {
        "type": "object",
        "properties": {
          "avatarURL": {
            "type": "string",
            "format": "binary",
            "description": "user's photo"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "birthday": {
            "type": "string",
            "description": "User's birthday",
            "example": "09-17-2002"
          },
          "name": {
            "type": "string",
            "description": "User's name",
            "example": "Boby Swagger"
          },
          "city": {
            "type": "string",
            "description": "User's city",
            "example": "Makeevka, Donetsk"
          },
          "phone": {
            "type": "string",
            "description": "User's phone",
            "example": "+380671111111"
          }
        }
      },
      "RefreshTokenRequest": {
        "type": "object",
        "required": [
          "refreshToken"
        ],
        "properties": {
          "refreshToken": {
            "type": "string",
            "description": "refreshToken",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYzZTM4MGMxOTRkZTIwZjE3NjFkZjRhZSIsImlhdCI6MTY3NjYzMTI2MSwiZXhwIjoxNjc2NzE3NjYxfQ.nbQlCrbwRFABtjmJop6g5C8HMRqiyzsd1akMoNbh378"
          }
        }
      },
      "RefreshTokenResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "User's id",
            "example": "_id : 63e380c194de20f1761df4ae"
          },
          "password":{
            "type": "string",
            "description": "password hash",
            "example": "$2a$10$0N36jbNnv3XgPfw.c3dug.WI8dS8SgRh9erEDpiIDhLaeBxFVpNPa"
          },
          "avatarURL": {
            "type": "string",
            "format": "binary",
            "description": "user's photo"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "name": {
            "type": "string",
            "description": "User's name",
            "example": "Boby Swagger"
          },
          "city": {
            "type": "string",
            "description": "User's city",
            "example": "Makeevka, Donetsk"
          },
          "phone": {
            "type": "string",
            "description": "User's phone",
            "example": "+380671111111"
          },
          "favorite":{
            "type": "array",
            "description": "list favorite"
          },
          "accessToken":{
            "type": "string",
            "description": "token"
          },
          "refreshToken":{
            "type": "string",
            "description": "token"
          }
        }
      },
      "ServiceResponse": {
        "type": "array",
        "items": {
          "type": "object",
            "properties": {
            "_id": {
              "type": "string",
              "example": "63e35ecf9019e5da4cc5ec67"
            },
            "title": {
              "type": "string",
              "example": "Притулок для бездомних тварин 'Сіріус'"
            },
            "url": {
              "type": "string",
              "example": "https://uk-ua.facebook.com/NGO.Barbos/"
            },
            "addressUrl": {
              "type": "string",
              "example": "https://goo.gl/maps/iq8NXEUf31EAQCzc6"
            },
            "logo": {
              "type": "string",
              "example": "https://res.cloudinary.com/petlydata/image/upload/v1675185609/logo/logo2_cibuix.png"
            },
            "worktime": {
              "type": "array"
            },
            "adress": {
              "type": "string",
              "example": "Grigorenka Street, 25"
            },
            "phone": {
              "type": "string",
              "example": "+380931934069"
            },
            "email": {
              "type": "string",
              "example": "barbos@gmail.com"
            }
          }
        }
      },
      "NewsResponse": {
        "type": "array",
        "items": {
          "type": "object",
            "properties": {
            "_id": {
              "type": "string",
              "example": "63e35ecf9019e5da4cc5ec67"
            },
            "title": {
              "type": "string",
              "example": "В День ветеринара в столиці пройде безкоштовний тренінг з надання першої допомоги тваринам"
            },
            "url": {
              "type": "string",
              "example": "https://www.kmlvm.com.ua/oberezhno-klishhi-yak-uberegty-ulyublentsya-vid-nepryyemnostej/"
            },
            "text": {
              "type": "string",
              "example": "Травневі прогулянки з улюбленцем не лише приємні, але й потребують пильності."
            },
            "date": {
              "type": "string",
              "example": "2022-05-04"
            }
          }
        }
      },
      "NoticesCategory": {
        "type": "array",
        "items": {
          "type": "object"
        },
        "properties": {
          "avatar": {
            "type": "object",
            "properties": {
              "public_id": {
                "type": "string",
                "description": "public ID on Cloudinary",
                "example": "notices/63d9c87277ab211223ccd24d.png"
              },
              "url": {
                "type": "string",
                "description": "Url to file on Cloudinary",
                "example": "http://res.cloudinary.com/petlydata/image/upload/v1675217011/notices/63d9c87277ab211223ccd24d.png.png"
              }
            }
          },
          "_id": {
            "type": "string",
            "format": "uuid",
            "description": "Notice's id",
            "example": "63d9c87277ab211223ccd24d"
          },
          "category": {
            "type": "string",
            "description": "Notice's category",
            "enum": ["sell", "lostfound", "ingoodhands"],
            "example": "sell"
          },
          "title": {
            "type": "string",
            "description": "Notice's title",
            "example": "Сute dog looking for a home,"
          },
          "birthdate": {
            "type": "string",
            "format": "date",
            "description": "Pet's birthday",
            "example": "2021-09-21T00:00:00.000Z"
          },
          "breed": {
            "type": "string",
            "description": "Pet's breed",
            "example": "Border Terrier"
          },
          "location": {
            "type": "string",
            "description": "Location (city, region)",
            "example": "Lviv,Lviv"
          },
          "price": {
            "oneOf": [
              {
                "type": "integer",
                "minimum": 1,
                "description": "Sale price of the pet"
              },
              {
                "type": "integer",
                "nullable": true,
                "description": "No price for category: \"ingoodhands\" and \"lostfound\""
              }
            ],
            "example": 350
          },
          "owner": {
            "type": "string",
            "format": "uuid",
            "description": "User's identificator",
            "example": "63e4094da8d79b62be09b05a"
          }
        },
        "example": [
          {
            "avatar": {
              "public_id": "notices/63d9c88177ab211223ccd259.png",
              "url": "http://res.cloudinary.com/petlydata/image/upload/v1675217026/notices/63d9c88177ab211223ccd259.png.png"
            },
            "_id": "63d9c88177ab211223ccd259",
            "category": "ingoodhands",
            "title": "Сute cat looking for a home",
            "birthdate": "2021-09-21T00:00:00.000Z",
            "breed": "Burmese",
            "location": "Lviv, Lviv",
            "price": null,
            "owner": "63e4094da8d79b62be09b05a"
          },
          {
            "avatar": {
              "public_id": "notices/63d9c87277ab211223ccd24d.png",
              "url": "http://res.cloudinary.com/petlydata/image/upload/v1675217011/notices/63d9c87277ab211223ccd24d.png.png"
            },
            "_id": "63d9c87277ab211223ccd24d",
            "category": "sell",
            "title": "Сute dog looking for a home",
            "birthdate": "8-22-2021",
            "breed": "Border Terrier",
            "location": "Lviv, Lviv",
            "price": 350,
            "owner": "63e4094da8d79b62be09b05a"
          },
          {
            "avatar": {
              "public_id": "notices/63d9c88177ab211223ccd259.png",
              "url": "http://res.cloudinary.com/petlydata/image/upload/v1675217026/notices/63d9c88177ab211223ccd259.png.png"
            },
            "_id": "63d9c88177ab211223ccd259",
            "category": "lostfound",
            "title": "Сute cat looking for a home",
            "birthdate": "2021-09-21T00:00:00.000Z",
            "breed": "Burmese",
            "location": "Lutsk, Lutsk",
            "price": null,
            "owner": "63e4094da8d79b62be09b05a"
          }
        ]
      },
      "NoticeBodyToCreate": {
        "type": "object",
        "required": [
          "category",
          "title",
          "sex",
          "location",
          "comments"
        ],
        "properties": {
          "avatar": {
            "type": "string",
            "format": "binary",
            "description": "User's photo"
          },
          "category": {
            "type": "string",
            "description": "Category of notice. Can be sell, lostfound or ingoodhands",
            "enum": ["sell", "lostfound", "ingoodhands"],
            "example": "sell"
          },
          "title": {
            "type": "string",
            "description": "The title of the notice",
            "example": "Сute dog looking for a home,"
          },
          "name": {
            "type": "string",
            "description": "Pet's name",
            "example": "Rich"
          },
          "birthdate": {
            "type": "string",
            "format": "date",
            "description": "Pet's birthday",
            "example": "2021-09-21T00:00:00.000Z"
          },
          "breed": {
            "type": "string",
            "description": "Pet's breed",
            "example": "Border Terrier"
          },
          "sex": {
            "type": "string",
            "description": "Pet's sex",
            "enum": ["male", "female"],
            "example": "male"
          },
          "location": {
            "type": "string",
            "description": "location (city, region)",
            "example": "Lviv,Lviv"
          },
          "price": {
            "description": "Can be any additional integer for category 'sell' or not send for another category",
            "anyOf": [
              {
                "type": "integer",
                "minimum": 1,
                "description": "Sale price of the pet"
              },
              {
                "type": "integer",
                "nullable": true,
                "description": "No price for category: \"ingoodhands\" and \"lostfound\""
              }
            ],
            "example": [350, null]
          },
          "comments": {
            "type": "string",
            "description": "Notice's comments",
            "example": "Lorem ipsum dolor sit amet, consectetur Lorem ipsum color sit amet"
          }
        }
      },
      "ResponseNoticeById": {
        "type": "object",
        "properties": {
          "notice": {
            "type": "object",
            "properties": {
              "avatar": {
                "type": "object",
                "properties": {
                  "public_id": {
                    "type": "string",
                    "description": "public ID on Cloudinary"
                  },
                  "url": {
                    "type": "string",
                    "description": "Url to file on Cloudinary"
                  }
                }
              },
              "_id": {
                "type": "string",
                "format": "uuid",
                "description": "Notice's id"
              },
              "category": {
                "type": "string",
                "enum": ["sell", "lostfound", "ingoodhands"]
              },
              "title": {
                "type": "string",
                "description": "The name of the notice"
              },
              "name": {
                "type": "string",
                "description": "the name of the animal"
              },
              "sex": {
                "type": "string",
                "description": "The sex of the animal",
                "enum": ["male", "female"]
              },
              "birthdate": {
                "type": "string",
                "format": "date",
                "description": "Pet's birthday"
              },
              "breed": {
                "type": "string",
                "description": "Type breed of pet"
              },
              "location": {
                "type": "string",
                "description": "location (city, region)"
              },
              "price": {
                "oneOf": [
                  {
                    "type": "integer",
                    "minimum": 1,
                    "description": "Sale price of the pet"
                  },
                  {
                    "type": "integer",
                    "nullable": true,
                    "description": "No price for category: \"ingoodhands\" and \"lostfound\""
                  }
                ]
              },
              "comments": {
                "type": "string",
                "description": "Коментарі до оголошення"
              },
              "owner": {
                "type": "string",
                "format": "uuid",
                "description": "Id of the user who created the notice"
              }
            }
          },
          "user": {
            "type": "object",
            "properties": {
              "email": {
                "type": "string",
                "format": "email",
                "description": "User's email"
              },
              "phone": {
                "type": "string",
                "description": "User's phone"
              }
            }
          }
        }
      },
      "NoticesFavoritesUser": {
        "type": "array",
        "items": {
          "type": "object"
        },
        "properties": {
          "avatar": {
            "type": "object",
            "properties": {
              "public_id": {
                "type": "string",
                "description": "public ID on Cloudinary",
                "example": "notices/63d9c87277ab211223ccd24d.png"
              },
              "url": {
                "type": "string",
                "description": "Url to file on Cloudinary",
                "example": "http://res.cloudinary.com/petlydata/image/upload/v1675217011/notices/63d9c87277ab211223ccd24d.png.png"
              }
            }
          },
          "_id": {
            "type": "string",
            "format": "uuid",
            "description": "Notice's id",
            "example": "63d9c87277ab211223ccd24d"
          },
          "category": {
            "description": "Notice's category",
            "type": "string",
            "enum": ["sell", "lostfound", "ingoodhands"],
            "example": "sell"
          },
          "title": {
            "type": "string",
            "description": "Notice's title",
            "example": "Сute dog looking for a home,"
          },
          "birthdate": {
            "type": "string",
            "format": "date",
            "description": "Pet's birthday",
            "example": "2021-09-21T00:00:00.000Z"
          },
          "breed": {
            "type": "string",
            "description": "Pet's breed",
            "example": "Border Terrier"
          },
          "location": {
            "type": "string",
            "description": "Location (city, region)",
            "example": "Lviv,Lviv"
          },
          "price": {
            "oneOf": [
              {
                "type": "integer",
                "minimum": 1,
                "description": "Sale price of the pet"
              },
              {
                "type": "integer",
                "nullable": true,
                "description": "Null for category: \"ingoodhands\" and \"lostfound\""
              }
            ],
            "example": 350
          },
          "owner": {
            "type": "string",
            "format": "uuid",
            "description": "The Id of the user who created the notice",
            "example": "63e4094da8d79b62be09b05a"
          }
        },
        "example": [
          {
            "avatar": {
              "public_id": "notices/63d9c88177ab211223ccd259.png",
              "url": "http://res.cloudinary.com/petlydata/image/upload/v1675217026/notices/63d9c88177ab211223ccd259.png.png"
            },
            "_id": "63d9c88177ab211223ccd259",
            "category": "ingoodhands",
            "title": "Сute cat looking for a home",
            "birthdate": "2021-09-21T00:00:00.000Z",
            "breed": "Burmese",
            "location": "Lviv, Lviv",
            "price": null,
            "owner": "63e4094da8d79b62be09b05a"
          },
          {
            "avatar": {
              "public_id": "notices/63d9c87277ab211223ccd24d.png",
              "url": "http://res.cloudinary.com/petlydata/image/upload/v1675217011/notices/63d9c87277ab211223ccd24d.png.png"
            },
            "_id": "63d9c87277ab211223ccd24d",
            "category": "sell",
            "title": "Сute dog looking for a home",
            "birthdate": "8-22-2021",
            "breed": "Border Terrier",
            "location": "Lviv, Lviv",
            "price": 350,
            "owner": "63e4094da8d79b62be09b05a"
          },
          {
            "avatar": {
              "public_id": "notices/63d9c88177ab211223ccd259.png",
              "url": "http://res.cloudinary.com/petlydata/image/upload/v1675217026/notices/63d9c88177ab211223ccd259.png.png"
            },
            "_id": "63d9c88177ab211223ccd259",
            "category": "lostfound",
            "title": "Сute cat looking for a home",
            "birthdate": "2021-09-21T00:00:00.000Z",
            "breed": "Burmese",
            "location": "Lutsk, Lutsk",
            "price": null,
            "owner": "63e4094da8d79b62be09b05a"
          }
        ]
      },
      "NoticesCurrentUser": {
        "type": "array",
        "items": {
          "type": "object"
        },
        "properties": {
          "avatar": {
            "type": "object",
            "properties": {
              "public_id": {
                "type": "string",
                "description": "public ID on Cloudinary",
                "example": "notices/63d9c87277ab211223ccd24d.png"
              },
              "url": {
                "type": "string",
                "description": "Url to file on Cloudinary",
                "example": "http://res.cloudinary.com/petlydata/image/upload/v1675217011/notices/63d9c87277ab211223ccd24d.png.png"
              }
            }
          },
          "_id": {
            "type": "string",
            "format": "uuid",
            "description": "Notice's id",
            "example": "63d9c87277ab211223ccd24d"
          },
          "category": {
            "type": "string",
            "description": "Notice's category",
            "enum": ["sell", "lostfound", "ingoodhands"],
            "example": "sell"
          },
          "title": {
            "type": "string",
            "description": "Notice's title",
            "example": "Сute dog looking for a home,"
          },
          "birthdate": {
            "type": "string",
            "format": "date",
            "description": "Pet's birthday",
            "example": "8-22-2021"
          },
          "breed": {
            "type": "string",
            "description": "Pet's breed",
            "example": "Border Terrier"
          },
          "location": {
            "type": "string",
            "description": "Location (city, region)",
            "example": "Lviv,Lviv"
          },
          "price": {
            "oneOf": [
              {
                "type": "integer",
                "minimum": 1,
                "description": "Sale price of the pet"
              },
              {
                "type": "integer",
                "nullable": true,
                "description": "No price for category: \"ingoodhands\" and \"lostfound\""
              }
            ],
            "example": 350
          },
          "owner": {
            "type": "string",
            "format": "uuid",
            "description": "User's identificator",
            "example": "63e4094da8d79b62be09b05a"
          }
        },
        "example": [
          {
            "avatar": {
              "public_id": "notices/63d9c88177ab211223ccd259.png",
              "url": "http://res.cloudinary.com/petlydata/image/upload/v1675217026/notices/63d9c88177ab211223ccd259.png.png"
            },
            "_id": "63d9c88177ab211223ccd259",
            "category": "ingoodhands",
            "title": "Сute cat looking for a home",
            "birthdate": "2021-09-21T00:00:00.000Z",
            "breed": "Burmese",
            "location": "Lviv, Lviv",
            "price": null,
            "owner": "63e4094da8d79b62be09b05a"
          },
          {
            "avatar": {
              "public_id": "notices/63d9c87277ab211223ccd24d.png",
              "url": "http://res.cloudinary.com/petlydata/image/upload/v1675217011/notices/63d9c87277ab211223ccd24d.png.png"
            },
            "_id": "63d9c87277ab211223ccd24d",
            "category": "sell",
            "title": "Сute dog looking for a home",
            "birthdate": "8-22-2021",
            "breed": "Border Terrier",
            "location": "Lviv, Lviv",
            "price": 350,
            "owner": "63e4094da8d79b62be09b05a"
          },
          {
            "avatar": {
              "public_id": "notices/63d9c88177ab211223ccd259.png",
              "url": "http://res.cloudinary.com/petlydata/image/upload/v1675217026/notices/63d9c88177ab211223ccd259.png.png"
            },
            "_id": "63d9c88177ab211223ccd259",
            "category": "lostfound",
            "title": "Сute cat looking for a home",
            "birthdate": "2021-09-21T00:00:00.000Z",
            "breed": "Burmese",
            "location": "Lutsk, Lutsk",
            "price": null,
            "owner": "63e4094da8d79b62be09b05a"
          }
        ]
      },
      "CurrentUserRes": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "format": "uuid",
            "description": "Notice's id",
            "example": "63d9c87277ab211223ccd24d"
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "user's email",
            "example": "marta@gmail.com"
          },
          "name": {
            "type": "string",
            "description": "user's name",
            "example": "marta"
          },
          "location": {
            "type": "string",
            "description": "user's location",
            "example": "Kovel, Lutsk"
          },
          "phone": {
            "type": "string",
            "description": "user's phone",
            "example": "+380631234321"
          },
          "birthdate": {
            "type": "string",
            "format": "date",
            "description": "User's birthdate",
            "example": "1986-03-20T22:00:00.000+00:00"
          },
          "avatar": {
            "type": "string",
            "format": "binary",
            "description": "user's photo"
          },
          "favorite": {
            "type": "array",
            "description": "user's ads added to favorite ",
            "example": ["63e155b5552a2f02a08e009f", "63dd7b4247642a3b99b5b5f2"]
          }
        }
      },
      "CurrentUserPetRes": {
        "properties": {
          "userPetsList": {
            "type": "array",
            "example": [
              {
                "_id": "63e24efd79bb76084b355870",
                "name": "Tom",
                "birthdate": "2020-10-20",
                "breed": "street",
                "photoPet": "https://us.123rf.com/450wm/naddya/naddya1701/naddya170100029/naddya170100029.jpg?ver=6",
                "comments": "Good cat, love mouse",
                "owner": "63e935ec595f3c9b855b5131"
              },
              {
                 "_id": "63ea4a1aefa993e7125d6bc1",
                 "name": "Tomy",
                 "birthday": "2020-10-20",
                 "breed": "Persian cat",
                 "photoPet": "https://us.123rf.com/450wm/naddya/naddya1701/naddya170100029/naddya170100029.jpg?ver=6",
                 "comments": "eeqweqwwqeqewqeqweewqew",
                 "owner": "63e935ec595f3c9b855b5131"
              }
            ],
            "description": "user's pets "
          }
        }
      },
      "addPet": {
        "type": "object",
        "required": ["name","birthdate","breed", "comments"],
        "properties": {
          "avatar": {
            "type": "string",
            "format": "binary"
          },
          "name": {
            "type": "string",
            "example": "Mars"
          },
          "birthdate": {
            "type": "string",
            "example": "2000-05-31T21:00:00.000Z"
          },
          "breed": {
            "type": "string",
            "example": "metis"
          },
          "comments": {
            "type": "string",
            "example": "Good guard, smart"
          }
        }
      },
      "NewPet": {
        "type": "object",
        "properties": {
          "avatar": {
            "type": "object",
            "example": {
              "public_id": "pets/63e3664dfa566cd6471ca07c.png",
              "url": "http://res.cloudinary.com/petlydata/image/upload/v1675847247/pets/63e3664dfa566cd6471ca07c.png.png"
            }
          },
          "name": {
            "type": "string",
            "example": "Mars"
          },
          "birthday": {
            "type": "string",
            "example": "2000-12-01T21:00:00.000Z"
          },
          "breed": {
            "type": "string",
            "example": "metis"
          },
          "comments": {
            "type": "string",
            "example": "Good guard, smart"
          },
          "owner": {
            "type": "string",
            "example": "63e11fb9cc40d9212901319c"
          },
          "_id": {
            "type": "string",
            "example": "63e3664dfa566cd6471ca07c"
          }
        }
      },
      "Error": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Any validation error"
          }
        },
        "required": [
          "message"
        ]
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
